/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vqq2EkAzn3CTTzmF7cN3ao
// Component: 1yiwtfdP4kH3

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import ServiceCard from "../../ServiceCard"; // plasmic-import: WpsoIcLzp7L2/component
import ServiceCard2 from "../../ServiceCard2"; // plasmic-import: sGwmsxf_S2NU/component
import ServiceCard3 from "../../ServiceCard3"; // plasmic-import: ofZRJvk17xGu/component
import ProcessCard from "../../ProcessCard"; // plasmic-import: Uah7VsWpV6Q4/component
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import CoachProfileCard from "../../CoachProfileCard"; // plasmic-import: pwkDe4WdLeEP/component
import TeamsCard from "../../TeamsCard"; // plasmic-import: MlYa0Ac5yeND/component
import Button from "../../Button"; // plasmic-import: TUfunDceiXe8/component
import TestimonialCard from "../../TestimonialCard"; // plasmic-import: Qey7pJzlldRh/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: vqq2EkAzn3CTTzmF7cN3ao/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: vqq2EkAzn3CTTzmF7cN3ao/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: vqq2EkAzn3CTTzmF7cN3ao/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 1yiwtfdP4kH3/css

import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: I1-UL0cTF0ke/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: gQ9GL9qi87FQ/icon
import ChevronDown2Icon from "./icons/PlasmicIcon__ChevronDown2"; // plasmic-import: qG4-swCrl7ga/icon
import InstagramSvgrepoComSvgIcon from "./icons/PlasmicIcon__InstagramSvgrepoComSvg"; // plasmic-import: aHoszmLT10rp/icon
import FacebookSvgrepoComSvgIcon from "./icons/PlasmicIcon__FacebookSvgrepoComSvg"; // plasmic-import: c73RtLfNBEOR/icon
import EmailSvgrepoComSvgIcon from "./icons/PlasmicIcon__EmailSvgrepoComSvg"; // plasmic-import: NnlUgWY9zufC/icon
import WhatsappSvgrepoComSvgIcon from "./icons/PlasmicIcon__WhatsappSvgrepoComSvg"; // plasmic-import: pDVD-qoq9ubb/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  h1?: Flex__<"h1">;
  blockquote?: Flex__<"blockquote">;
  columns?: Flex__<"div">;
  serviceCard?: Flex__<typeof ServiceCard>;
  serviceCard2?: Flex__<typeof ServiceCard2>;
  serviceCard3?: Flex__<typeof ServiceCard3>;
  sliderCarousel2?: Flex__<typeof SliderWrapper>;
  sliderCarousel?: Flex__<typeof SliderWrapper>;
  umamiTracking?: Flex__<typeof Embed>;
  formbricksSdk?: Flex__<typeof Embed>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            styleTokensClassNames_antd_5_hostless,
            sty.root
          )}
        >
          <section className={classNames(projectcss.all, sty.section__h7So)}>
            <div className={classNames(projectcss.all, sty.freeBox__kesXx)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__fSfc)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"100px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/hockey_lab_website/images/logoHorizontalMonoDarkSvg.svg",
                  fullWidth: 329.47,
                  fullHeight: 117.12,
                  aspectRatio: undefined
                }}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__bUueP)}>
              <div className={classNames(projectcss.all, sty.freeBox___9A39Q)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__qC98L)}
                  displayHeight={"auto"}
                  displayMaxHeight={"100%"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/hockey_lab_website/images/logoVerticalWhiteSvg.svg",
                    fullWidth: 233.84,
                    fullHeight: 371.63,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__bj20N)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__xouM)}
                    delay={500}
                    duration={2000}
                    triggerOnce={true}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"We develop \nhockey talents"}
                    </h1>
                  </Reveal>
                  <blockquote
                    data-plasmic-name={"blockquote"}
                    data-plasmic-override={overrides.blockquote}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.blockquote
                    )}
                  >
                    {
                      "Inspiring and empowering future field hockey generation through innovative coaching"
                    }
                  </blockquote>
                </div>
              </div>
            </div>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__zIcrF
              )}
              component={Link}
              href={`/#${"our-services"}`}
              onClick={async event => {
                const $steps = {};

                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
              onScroll={async event => {
                const $steps = {};

                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
              platform={"nextjs"}
            >
              <ChevronDownIcon
                className={classNames(projectcss.all, sty.svg__eW5Xw)}
                role={"img"}
              />
            </PlasmicLink__>
          </section>
          <section
            className={classNames(projectcss.all, sty.section__gywZl)}
            id={"our-services"}
          >
            <div className={classNames(projectcss.all, sty.freeBox___0USJz)}>
              <h6
                className={classNames(
                  projectcss.all,
                  projectcss.h6,
                  projectcss.__wab_text,
                  sty.h6__tMavv
                )}
              >
                {"Achieve your goals"}
              </h6>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ed3Q
                )}
              >
                {"With our Coaching Services"}
              </h2>
            </div>
            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__bEmRo)}>
                <ServiceCard
                  data-plasmic-name={"serviceCard"}
                  data-plasmic-override={overrides.serviceCard}
                  className={classNames("__wab_instance", sty.serviceCard)}
                  slot3={
                    "Our approach centers on building a strong team bond and a supportive growth environment, enabling each player to reach their full potential while striving for shared success."
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__mAufG)}>
                <ServiceCard2
                  data-plasmic-name={"serviceCard2"}
                  data-plasmic-override={overrides.serviceCard2}
                  className={classNames("__wab_instance", sty.serviceCard2)}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__reOsv)}>
                <ServiceCard3
                  data-plasmic-name={"serviceCard3"}
                  data-plasmic-override={overrides.serviceCard3}
                  className={classNames("__wab_instance", sty.serviceCard3)}
                />
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__v69Ep)}>
            <div className={classNames(projectcss.all, sty.freeBox__zwh3V)}>
              <h6
                className={classNames(
                  projectcss.all,
                  projectcss.h6,
                  projectcss.__wab_text,
                  sty.h6__q57YY
                )}
              >
                {"Embark on your field hockey journey"}
              </h6>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__xnJOe
                )}
              >
                {"Stages of Development"}
              </h2>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__zhVkW)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___1D0G
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ textDecorationLine: "underline" }}
                  >
                    {"We understand field hockey players"}
                  </span>
                  <React.Fragment>
                    {
                      "\nHere at Hockey Lab we take a player-centered approach to field hockey training, adapting programs to meet individual needs at every stage of development. Our coaches expertly craft engaging sessions grounded in scientific principles, driving improvement and sustaining motivation for athletes of all ages and skill levels."
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__wxRr)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__dVarP)}
                  delay={500}
                  duration={3000}
                  triggerOnce={true}
                >
                  <ProcessCard
                    className={classNames(
                      "__wab_instance",
                      sty.processCard___9THlV
                    )}
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pOeVm
                        )}
                      >
                        {"Age 2-5"}
                      </div>
                    }
                  >
                    {"Discover"}
                  </ProcessCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__udrjY)}
                  delay={1000}
                  duration={3000}
                  triggerOnce={true}
                >
                  <ProcessCard
                    className={classNames(
                      "__wab_instance",
                      sty.processCard__ueCe
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__csJaj
                        )}
                      >
                        {"2"}
                      </div>
                    }
                    slot2={"Age 6-10"}
                  />
                </Reveal>
                <Reveal
                  cascade={false}
                  className={classNames("__wab_instance", sty.reveal__pZHrT)}
                  delay={1500}
                  duration={3000}
                  triggerOnce={true}
                >
                  <ProcessCard
                    className={classNames(
                      "__wab_instance",
                      sty.processCard__uLdnd
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gl9BA
                        )}
                      >
                        {"3"}
                      </div>
                    }
                    slot2={"Age 10-16"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aFb4H
                      )}
                    >
                      {"Compete & Improve"}
                    </div>
                  </ProcessCard>
                </Reveal>
                <Reveal
                  cascade={false}
                  className={classNames("__wab_instance", sty.reveal__cPWy)}
                  delay={2000}
                  duration={3000}
                  triggerOnce={true}
                >
                  <ProcessCard
                    className={classNames(
                      "__wab_instance",
                      sty.processCard__ck7Q
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oq94N
                        )}
                      >
                        {"4"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zoTy0
                        )}
                      >
                        {"Age 16-40"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lxfY
                      )}
                    >
                      {"Peak Performance"}
                    </div>
                  </ProcessCard>
                </Reveal>
                <Reveal
                  cascade={false}
                  className={classNames("__wab_instance", sty.reveal__aO7T)}
                  delay={2500}
                  duration={3000}
                  triggerOnce={true}
                >
                  <ProcessCard
                    className={classNames(
                      "__wab_instance",
                      sty.processCard__xOyzs
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nNlBz
                        )}
                      >
                        {"5"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jrovG
                        )}
                      >
                        {"Age 40+"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cTbs0
                      )}
                    >
                      {"Lifetime Engagement"}
                    </div>
                  </ProcessCard>
                </Reveal>
              </div>
            </div>
            <section className={classNames(projectcss.all, sty.section__odpkc)}>
              <div className={classNames(projectcss.all, sty.freeBox__mWiys)}>
                <h6
                  className={classNames(
                    projectcss.all,
                    projectcss.h6,
                    projectcss.__wab_text,
                    sty.h6___70Eqk
                  )}
                >
                  {"Guiding you along with our exceptional"}
                </h6>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___7Ty5C
                  )}
                >
                  {"Coaching Team"}
                </h2>
                <div
                  className={classNames(projectcss.all, sty.freeBox___2HTlI)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v4Wye
                    )}
                  >
                    {"Trusted by"}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8XfpO)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sumn)}
                    >
                      <Reveal
                        className={classNames(
                          "__wab_instance",
                          sty.reveal__rYvrJ
                        )}
                        delay={1000}
                        effect={"slide"}
                        triggerOnce={true}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___1YHq9
                          )}
                        >
                          {"35+"}
                        </h3>
                      </Reveal>
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__nrVm2
                        )}
                      >
                        {"Schools & Teams"}
                      </h4>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tZcUa)}
                    >
                      <Reveal
                        className={classNames(
                          "__wab_instance",
                          sty.reveal__oPwtm
                        )}
                        delay={2000}
                        effect={"slide"}
                        triggerOnce={true}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__kDxCg
                          )}
                        >
                          {"300+"}
                        </h3>
                      </Reveal>
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__lyyPw
                        )}
                      >
                        {"Students"}
                      </h4>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ui0Bq)}
                    >
                      <Reveal
                        className={classNames(
                          "__wab_instance",
                          sty.reveal__nTMqH
                        )}
                        delay={3000}
                        effect={"slide"}
                        triggerOnce={true}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__tTmJm
                          )}
                        >
                          {"20+"}
                        </h3>
                      </Reveal>
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__rHaGk
                        )}
                      >
                        {"Team & Individual Awards"}
                      </h4>
                    </div>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__sn5)}>
                {(() => {
                  const child$Props = {
                    arrowColor: hasVariant(
                      globalVariants,
                      "screen",
                      "mobileOnly"
                    )
                      ? true
                        ? "#FAFAFA"
                        : undefined
                      : undefined,
                    arrows: hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : false,
                    autoplay: false,
                    autoplaySpeed: hasVariant(
                      globalVariants,
                      "screen",
                      "mobileOnly"
                    )
                      ? 2000
                      : 0,
                    beforeChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "currentSlide",
                        ["sliderCarousel2", "currentSlide"],
                        SliderWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    centerMode: hasVariant(
                      globalVariants,
                      "screen",
                      "mobileOnly"
                    )
                      ? false
                      : true,
                    className: classNames(
                      "__wab_instance",
                      sty.sliderCarousel2
                    ),
                    cssEase: "linear",
                    dots: hasVariant(globalVariants, "screen", "mobileOnly")
                      ? false
                      : false,
                    infinite: hasVariant(globalVariants, "screen", "mobileOnly")
                      ? false
                      : false,
                    initialSlide: generateStateValueProp($state, [
                      "sliderCarousel2",
                      "currentSlide"
                    ]),
                    ref: ref => {
                      $refs["sliderCarousel2"] = ref;
                    },
                    sliderScopeClassName: sty["sliderCarousel2__slider"]
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "currentSlide",
                        plasmicStateName: "sliderCarousel2.currentSlide"
                      }
                    ],
                    [],
                    SliderWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <SliderWrapper
                      data-plasmic-name={"sliderCarousel2"}
                      data-plasmic-override={overrides.sliderCarousel2}
                      {...child$Props}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3Evjz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wehb9
                          )}
                        >
                          <CoachProfileCard
                            className={classNames(
                              "__wab_instance",
                              sty.coachProfileCard__esBmq
                            )}
                            slot={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nunXl
                                )}
                              >
                                {
                                  "FIH Educator & Level 4 Coach\nGSHA (Hangzhou) Technical Director\nFormer Hong Kong National Player"
                                }
                              </div>
                            }
                            slot2={
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__susF)}
                                displayHeight={"300px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"300px"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/hockey_lab_website/images/_20240601124803D8109279Jpg.jpg",
                                  fullWidth: 5184,
                                  fullHeight: 3456,
                                  aspectRatio: undefined
                                }}
                              />
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ymYb
                              )}
                            >
                              {"Jackie Chan"}
                            </div>
                          </CoachProfileCard>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ddJpq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dJpvt
                          )}
                        >
                          <CoachProfileCard
                            className={classNames(
                              "__wab_instance",
                              sty.coachProfileCard__vm2Mg
                            )}
                            slot={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___5DTif
                                )}
                              >
                                {
                                  "FIH Level 2 Coach\nCurrent Hong Kong National Player"
                                }
                              </div>
                            }
                            slot2={
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img___2Kq1F)}
                                displayHeight={"300px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"300px"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/hockey_lab_website/images/_20250311170638D8Aa6F6FJpg.jpg",
                                  fullWidth: 4632,
                                  fullHeight: 3464,
                                  aspectRatio: undefined
                                }}
                              />
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__q7Kv1
                              )}
                            >
                              {"Felix Iu"}
                            </div>
                          </CoachProfileCard>
                        </div>
                      </div>
                    </SliderWrapper>
                  );
                })()}
              </div>
            </section>
          </section>
          <section className={classNames(projectcss.all, sty.section__zdrLw)}>
            <div className={classNames(projectcss.all, sty.freeBox__ntHBt)}>
              <h6
                className={classNames(
                  projectcss.all,
                  projectcss.h6,
                  projectcss.__wab_text,
                  sty.h6__rd7K
                )}
              >
                {"Write your success story with us"}
              </h6>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__k73PE
                )}
              >
                {"Team & Individual Honors"}
              </h2>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__sZm0E)}>
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__ps1K
                )}
              >
                {"Premier League Teams"}
              </h3>
              <div className={classNames(projectcss.all, sty.freeBox__qi8Hr)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__hxRaa)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__ooD8A
                    )}
                    slot={"Men's League & Cup Champaion"}
                    slot2={"Khalsa Hockey Club"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___1DOj)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/khalsaPng.png",
                          fullWidth: 858,
                          fullHeight: 900,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames("__wab_instance", sty.button__wYbF)}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qkLe0
                          )}
                        >
                          {"HKHA Premier League"}
                        </div>
                      }
                    />
                  </TeamsCard>
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__kd7O1
                    )}
                    slot={"Men's & Women's Competition"}
                    slot2={"Antlers Hockey Club"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___4LFc3)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/anterlsLogoBlackSvg.svg",
                          fullWidth: 528.86,
                          fullHeight: 385.3,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___3MEfa
                      )}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gx9Nx
                          )}
                        >
                          {"HKHA Premier League"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__jpo5)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard___0O4U5
                    )}
                    slot={"Women's Competition"}
                    slot2={"Solis Hockey Club"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__hu7K7)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/solisLogoPng.png",
                          fullWidth: 1535,
                          fullHeight: 1535,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__d5Ieg
                      )}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aeGXr
                          )}
                        >
                          {"HKHA Premier League"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__xM9Ke)}>
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__qDxRm
                )}
              >
                {"Development Teams"}
              </h3>
              <div className={classNames(projectcss.all, sty.freeBox__qL45S)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__m002)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard___2Dmoe
                    )}
                    slot={"HKSSF Interschool Boys Competition"}
                    slot2={"Diocesan Boys' School"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__diUhb)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/diocesanBoysSchoolLogoPng.png",
                          fullWidth: 60,
                          fullHeight: 73,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__uy8GI
                      )}
                      color={"blue"}
                      disabled={false}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yvatK
                          )}
                        >
                          {"Champion"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__gndYk)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__fQd2S
                    )}
                    slot={"HKSSF Interschool Girls Competition"}
                    slot2={"Heep Yunn School"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__x2F0V)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/heepYunnSchoolLogoJpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__fp5Vv
                      )}
                      color={"blue"}
                      disabled={false}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__na5TU
                          )}
                        >
                          {"Champion"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__buWQa)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard___0TnK6
                    )}
                    slot={"HKSSF Interschool Girls Competition"}
                    slot2={"Sha Tin College"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__qzg0Y)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/_4058885310941814707225365581507840230555648NJpg.jpg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__mt1Tg
                      )}
                      color={"blue"}
                      disabled={false}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__biMxQ
                          )}
                        >
                          {"Champion"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__fajnt)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__lcPPa
                    )}
                    slot={"HK Mini & Youth Competition"}
                    slot2={"Tai Po Titans"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___6Vo3X)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/titansLogoJpg.jpg",
                          fullWidth: 1241,
                          fullHeight: 1241,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__xhqgA
                      )}
                      color={"blue"}
                      disabled={false}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__akTnb
                          )}
                        >
                          {"Champion"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__laow9)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__jfQpg
                    )}
                    slot={"China National U12 Youth Competition"}
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xxFs
                        )}
                      >
                        {"Yucai Dengyun School"}
                      </div>
                    }
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__hxqnK)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/yuCaiLogoSvg.svg",
                          fullWidth: 756.48,
                          fullHeight: 756.48,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__o3If6
                      )}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___47G
                          )}
                        >
                          {"Runners Up"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__lWt8)}>
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__iPkKr
                )}
              >
                {"HKU Hall Teams"}
              </h3>
              <div className={classNames(projectcss.all, sty.freeBox__apHx)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal___0K9V8)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__qb2Wk
                    )}
                    slot={"Men's Interhall Competition"}
                    slot2={"Swire Hall"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___8KTg7)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/swireHallLogoAvif.avif",
                          fullWidth: 412,
                          fullHeight: 386,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__wNpS7
                      )}
                      color={"blue"}
                      disabled={false}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vofIh
                          )}
                        >
                          {"Champion"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__tfLUq)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__oMYy
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0YABf
                        )}
                      >
                        {"Men's & Women's Inter-Hall Competition"}
                      </div>
                    }
                    slot2={"Starr Hall"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___3KHly)}
                        displayHeight={"60px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/starrHallLogoSvg.svg",
                          fullWidth: 2000,
                          fullHeight: 2000,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames("__wab_instance", sty.button__nv3E)}
                      color={"blue"}
                      disabled={false}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kzqTj
                          )}
                        >
                          {"Runners Up"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__oItNx)}>
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__ueOyn
                )}
              >
                {"Individual Awards"}
              </h3>
              <div className={classNames(projectcss.all, sty.freeBox___91R2M)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal___2Aoj2)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__wxI97
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s1WFe
                        )}
                      >
                        {"Player of the Tournament & Top Goal Scrorer"}
                      </div>
                    }
                    slot2={"HSIEH Tsung Yu"}
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__edIhV)}
                        displayHeight={"50px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"50px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/chinesTaipeiFlagPng.png",
                          fullWidth: 255,
                          fullHeight: 170,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__k6OWl
                      )}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lgTbM
                          )}
                        >
                          {"AHF Cup & HKG Quadrangular"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__yDcHp)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__o4Xq
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1EL9U
                        )}
                      >
                        {"Player of the Tournament"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vDjC3
                        )}
                      >
                        {"HUANG Yu Ting"}
                      </div>
                    }
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__hfy2C)}
                        displayHeight={"50px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"50px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/chinesTaipeiFlagPng.png",
                          fullWidth: 255,
                          fullHeight: 170,
                          aspectRatio: undefined
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__nmqze
                      )}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ccFzV
                          )}
                        >
                          {"Junior AHF Cup"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__xsBD)}
                  delay={500}
                  duration={2000}
                  effect={"zoom"}
                  triggerOnce={true}
                >
                  <TeamsCard
                    className={classNames(
                      "__wab_instance",
                      sty.teamsCard__w7Up
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__furMd
                        )}
                      >
                        {"Most Valuable Player"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hl53N
                        )}
                      >
                        {"IU Chi Him, Felix"}
                      </div>
                    }
                    slot3={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__cGq0N)}
                        displayHeight={"50px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"50px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hockey_lab_website/images/hkSvg.svg",
                          fullWidth: 640,
                          fullHeight: 480,
                          aspectRatio: 1.333333
                        }}
                      />
                    }
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__iwpwj
                      )}
                      color={"blue"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bwLqP
                          )}
                        >
                          {"Melbourne Cup"}
                        </div>
                      }
                    />
                  </TeamsCard>
                </Reveal>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section___0B1Gr)}>
            <div className={classNames(projectcss.all, sty.freeBox__ylLw0)}>
              <h6
                className={classNames(
                  projectcss.all,
                  projectcss.h6,
                  projectcss.__wab_text,
                  sty.h6__raBeR
                )}
              >
                {"Athlete Stories"}
              </h6>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__sIjP
                )}
              >
                {"Don't Just Take Our Word For It..."}
              </h2>
            </div>
            {(() => {
              const child$Props = {
                arrowColor: true ? "#D1D5DB" : undefined,
                arrows: hasVariant(globalVariants, "screen", "mobileOnly")
                  ? false
                  : true,
                autoplay: false,
                autoplaySpeed: 0,
                beforeChange: async (...eventArgs: any) => {
                  generateStateOnChangePropForCodeComponents(
                    $state,
                    "currentSlide",
                    ["sliderCarousel", "currentSlide"],
                    SliderWrapper_Helpers
                  ).apply(null, eventArgs);
                },
                centerMode: true,
                className: classNames("__wab_instance", sty.sliderCarousel),
                cssEase: "linear",
                dots: true,
                initialSlide: generateStateValueProp($state, [
                  "sliderCarousel",
                  "currentSlide"
                ]),
                ref: ref => {
                  $refs["sliderCarousel"] = ref;
                },
                sliderScopeClassName: sty["sliderCarousel__slider"],
                speed: 500
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "currentSlide",
                    plasmicStateName: "sliderCarousel.currentSlide"
                  }
                ],
                [],
                SliderWrapper_Helpers ?? {},
                child$Props
              );

              return (
                <SliderWrapper
                  data-plasmic-name={"sliderCarousel"}
                  data-plasmic-override={overrides.sliderCarousel}
                  {...child$Props}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eLp2H)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__coBlS)}
                    >
                      <TestimonialCard
                        className={classNames(
                          "__wab_instance",
                          sty.testimonialCard__sqsd0
                        )}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mhUcK)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6IjJu
                      )}
                    >
                      <TestimonialCard
                        className={classNames(
                          "__wab_instance",
                          sty.testimonialCard__ezBko
                        )}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2PW1S)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__njJ1M)}
                    >
                      <TestimonialCard
                        className={classNames(
                          "__wab_instance",
                          sty.testimonialCard__wHCrh
                        )}
                      />
                    </div>
                  </div>
                  <div className={classNames(projectcss.all, sty.freeBox__rUV)}>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tSiZp)}
                    >
                      <TestimonialCard
                        className={classNames(
                          "__wab_instance",
                          sty.testimonialCard__hFy3S
                        )}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5BahR)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zeTt)}
                    >
                      <TestimonialCard
                        className={classNames(
                          "__wab_instance",
                          sty.testimonialCard__cmjK
                        )}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__awghu)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bKyUb)}
                    >
                      <TestimonialCard
                        className={classNames(
                          "__wab_instance",
                          sty.testimonialCard__wkcHc
                        )}
                      />
                    </div>
                  </div>
                </SliderWrapper>
              );
            })()}
          </section>
          <section className={classNames(projectcss.all, sty.section__tgQ3B)}>
            <div className={classNames(projectcss.all, sty.freeBox__xXuJf)}>
              <h6
                className={classNames(
                  projectcss.all,
                  projectcss.h6,
                  projectcss.__wab_text,
                  sty.h6__ehpXk
                )}
              >
                {"Our Commitment to Excellence"}
              </h6>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__h0B2G
                )}
              >
                {"Lifelong Learning"}
              </h2>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___9PozE)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dObbD
                )}
              >
                {
                  "We believe in the power of continuous learning and are committed to ongoing professional development, mirroring the dedication we bring to educating our athletes. Our coaches regularly collaborate, attend international courses, and actively seek to expand their knowledge beyond hockey to enhance their training approach."
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__fUyyp)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___0UaT7)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__dv7DC)}
                    displayHeight={"100px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"200px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/hockey_lab_website/images/ahfLogoSvg.svg",
                      fullWidth: 264.45,
                      fullHeight: 52.492,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__rM2Pl)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___6RMI)}
                    displayHeight={"100px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"200px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/hockey_lab_website/images/fihLogoSvg.svg",
                      fullWidth: 291.02,
                      fullHeight: 151.18,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__sizT4)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qzkf9)}
                    displayHeight={"100px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"200px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/hockey_lab_website/images/stJohnLogoSvg.svg",
                      fullWidth: 86,
                      fullHeight: 70,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__xKbHc)}>
            <div className={classNames(projectcss.all, sty.freeBox__tGeLo)}>
              <h6
                className={classNames(
                  projectcss.all,
                  projectcss.h6,
                  projectcss.__wab_text,
                  sty.h6__sjGt4
                )}
              >
                {"Trusted by"}
              </h6>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__dz4P
                )}
              >
                {"Our Partners"}
              </h2>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__xkUVz)}>
              <div className={classNames(projectcss.all, sty.freeBox__x7Fx6)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__hEodd)}
                  displayHeight={"100px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"200px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/hockey_lab_website/images/gshaSvg.svg",
                    fullWidth: 755.91,
                    fullHeight: 188.98,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___2TjVc)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__vrbHp
                    )}
                  >
                    {"Gongshu Hockey Association (Hang Zhou)"}
                  </h4>
                </div>
              </div>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox__gDk8)}>
            <div className={classNames(projectcss.all, sty.freeBox__sZzFk)}>
              <div className={classNames(projectcss.all, sty.freeBox___91XyG)}>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__eo2P
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__m2KVz)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"110px"}
                    src={{
                      src: "/plasmic/hockey_lab_website/images/logoHorizontalMonoWhiteSvg.svg",
                      fullWidth: 329.47,
                      fullHeight: 117.12,
                      aspectRatio: undefined
                    }}
                  />
                </PlasmicLink__>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__euVaC)}>
                <div className={classNames(projectcss.all, sty.freeBox__o8Eyg)}>
                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__dpNt1
                    )}
                  >
                    {"Connect with us"}
                  </h6>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wuQe8)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__iWNlG
                      )}
                      component={Link}
                      href={"https://www.instagram.com/hockeylabhk"}
                      platform={"nextjs"}
                    >
                      <InstagramSvgrepoComSvgIcon
                        className={classNames(projectcss.all, sty.svg__aCxXm)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__yglAd
                      )}
                      component={Link}
                      href={"https://www.facebook.com/hockeylabhk"}
                      platform={"nextjs"}
                    >
                      <FacebookSvgrepoComSvgIcon
                        className={classNames(projectcss.all, sty.svg___6DL7)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4EUps)}
                  >
                    <EmailSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__dyuDk)}
                      role={"img"}
                    />

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__qzZam
                      )}
                    >
                      {"info@hockeylabhk.com"}
                    </h6>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__foxiz)}
                  >
                    <WhatsappSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__ghTc6)}
                      role={"img"}
                    />

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__efP7
                      )}
                    >
                      {"+852 5681 8188"}
                    </h6>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__iO32B)}>
                <h6
                  className={classNames(
                    projectcss.all,
                    projectcss.h6,
                    projectcss.__wab_text,
                    sty.h6__kYHd9
                  )}
                >
                  {"Company INFO"}
                </h6>
                <h6
                  className={classNames(
                    projectcss.all,
                    projectcss.h6,
                    projectcss.__wab_text,
                    sty.h6__qrjeh
                  )}
                >
                  {"Hockey Lab Limited"}
                </h6>
                <h6
                  className={classNames(
                    projectcss.all,
                    projectcss.h6,
                    projectcss.__wab_text,
                    sty.h6__h0Jst
                  )}
                >
                  {"2F Le Diamant\n703-705 Nathan Road\nMong Kok"}
                </h6>
              </div>
            </div>
          </div>
          <Embed
            data-plasmic-name={"umamiTracking"}
            data-plasmic-override={overrides.umamiTracking}
            className={classNames("__wab_instance", sty.umamiTracking)}
            code={
              '<script defer src="https://umami.jome.one/script.js" data-website-id="5ceb62d9-c65e-4d36-bdb8-4f354871f828"></script>'
            }
          />

          <Embed
            data-plasmic-name={"formbricksSdk"}
            data-plasmic-override={overrides.formbricksSdk}
            className={classNames("__wab_instance", sty.formbricksSdk)}
            code={
              '<!-- START Formbricks Surveys -->\n<script type="text/javascript">\n!function(){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src="https://forms.hockeylabhk.com/js/formbricks.umd.cjs",t.onload=function(){window.formbricks?window.formbricks.setup({environmentId:"cmdwxz7kv0007uf01ckm0gn18",appUrl:"https://forms.hockeylabhk.com"}):console.error("Formbricks library failed to load properly. The formbricks object is not available.");};var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(t,e)}();\n</script>\n<!-- END Formbricks Surveys -->'
            }
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "h1",
    "blockquote",
    "columns",
    "serviceCard",
    "serviceCard2",
    "serviceCard3",
    "sliderCarousel2",
    "sliderCarousel",
    "umamiTracking",
    "formbricksSdk"
  ],
  h1: ["h1"],
  blockquote: ["blockquote"],
  columns: ["columns", "serviceCard", "serviceCard2", "serviceCard3"],
  serviceCard: ["serviceCard"],
  serviceCard2: ["serviceCard2"],
  serviceCard3: ["serviceCard3"],
  sliderCarousel2: ["sliderCarousel2"],
  sliderCarousel: ["sliderCarousel"],
  umamiTracking: ["umamiTracking"],
  formbricksSdk: ["formbricksSdk"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  h1: "h1";
  blockquote: "blockquote";
  columns: "div";
  serviceCard: typeof ServiceCard;
  serviceCard2: typeof ServiceCard2;
  serviceCard3: typeof ServiceCard3;
  sliderCarousel2: typeof SliderWrapper;
  sliderCarousel: typeof SliderWrapper;
  umamiTracking: typeof Embed;
  formbricksSdk: typeof Embed;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    blockquote: makeNodeComponent("blockquote"),
    columns: makeNodeComponent("columns"),
    serviceCard: makeNodeComponent("serviceCard"),
    serviceCard2: makeNodeComponent("serviceCard2"),
    serviceCard3: makeNodeComponent("serviceCard3"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    umamiTracking: makeNodeComponent("umamiTracking"),
    formbricksSdk: makeNodeComponent("formbricksSdk"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
